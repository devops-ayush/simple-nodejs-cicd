pipeline {
    agent any
    environment {
        buildStatus = ""
    }
    stages {
        stage('build') {
            steps {
                script {
                    // Correct way to set an env variable
                    env.buildStatus = 'UNSTABLE'
                }
            }
        }

        stage('result') {
            when {
                environment name: 'buildStatus', value: 'UNSTABLE'
            }
            steps {
                sh 'echo Build is Unstable'
            }
        }
    }
}




0a2a3f2dc79256274ca7633e4a06fd069f963651
        stage("Update tag in k8s"){
            steps:{
                dir('k8s/') {
                   sh "sed -i 's#ayush966/nodejs:.*#ayush966/nodejs966:$GIT_COMMIT#g' deployment.yaml" 
                }
            }
        }
        stage("Deploy to K8s"){
            steps{
                
            }
        }

        Name:                     simple-nodejs-svc
Namespace:                default
Labels:                   app=nodejs-app
Annotations:              <none>
Selector:                 app=nodejs-app
Type:                     NodePort
IP Family Policy:         SingleStack
IP Families:              IPv4
IP:                       10.108.82.199
IPs:                      10.108.82.199
Port:                     <unset>  4000/TCP
TargetPort:               4000/TCP
NodePort:                 <unset>  30500/TCP
Endpoints:                192.168.19.235:4000,192.168.19.239:4000
Session Affinity:         None
External Traffic Policy:  Cluster
Events:                   <none>

        stage("Delete Old images"){
            agent{
                label "Docker"
            }
            steps{
                sh ''' 
                    tag=$(git rev-parse HEAD~2)
                    docker rmi ayush966/nodejs:$tag || true
                      ''' 
            }
        } 